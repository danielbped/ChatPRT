name: Application build

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  MYSQL_DB_ROOT_PASSWORD: ${{ secrets.MYSQL_DB_ROOT_PASSWORD }}
  MYSQL_DB_NAME: ${{ secrets.MYSQL_DB_NAME }}
  MYSQL_DB_PASSWORD: ${{ secrets.MYSQL_DB_PASSWORD }}
  VITE_SECRET_KEY_JWT: ${{ secrets.VITE_SECRET_KEY_JWT }}
  VITE_API_URL: ${{ secrets.VITE_API_URL }}
  MYSQL_DB_USER: ${{ secrets.MYSQL_DB_USER }}
  MYSQL_DB_HOST: ${{ secrets.MYSQL_DB_HOST }}
  MYSQL_DB_PORT: ${{ secrets.MYSQL_DB_PORT }}
  SECRET_KEY_JWT: ${{ secrets.SECRET_KEY_JWT }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  OPENAI_PROJECT: ${{ secrets.OPENAI_PROJECT }}
  OPENAI_ORGANIZATION: ${{ secrets.OPENAI_ORGANIZATION }}
  OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}

jobs:
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker Image
        run: .github/docker_build_and_push.sh

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Provider
        run: terraform providers lock \
          -platform=linux_amd64

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan
        id: plan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      # - name: Store Cloud Run URL
      #   id: cloudrun
      #   run: |
      #     URL=$(terraform output cloudrun_url)
      #     echo "::set-output name=url::$URL"

      # - name: Show Cloud Run URL
      #   run: echo "Cloud Run URL: ${{ steps.cloudrun.outputs.url }}"
